{
    "Phaser Plugin": {
        "prefix": "ps-plugin",
        "description": "phaser plugin snippet",
        "body": [
            "import * as Phaser from 'phaser';",
            "",
            "export interface ${PluginName}Game extends Phaser.Game {",
            "\tstorage: ${PluginName};",
            "}",
            "export class ${PluginName} extends Phaser.Plugin {",
            "\tprivate static instance: ${PluginName} = null;",
            "",
            "\tconstructor(game: Phaser.Game, parent: Phaser.PluginManager) {",
            "\t\tsuper(game, parent);",
            "\t\tif (${PluginName}.instance === null) {",
            "\t\t\t${PluginName}.instance = this;",
            "\t\t}",
            "\t\tif (undefined !== game && !game.hasOwnProperty('${propertyName}')) {",
            "\t\t\tObject.defineProperty(game, '${propertyName}', {",
            "\t\t\t\tvalue: ${PluginName}.instance",
            "\t\t\t});",
            "\t\t}",
            "\t\treturn ${PluginName}.instance;",
            "\t}",
            "//",
            "// Render is called right after the Game Renderer completes, but before the State.render.",
            "// It is only called if visible is set to true.",
            "//",
            "render(): void {",
            "\tsuper.render();",
            "}",
            "",
            "//",
            "// Update is called after all the core subsystems (Input, Tweens, Sound, etc) and the State have updated,",
            "// but before the render. It is only called if active is set to true.",
            "//",
            "update(): void{",
                "\tsuper.update();",
            "}",
            "${}",
            "}",
            ""
        ]
    }
}